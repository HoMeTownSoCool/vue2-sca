{"version":3,"file":"v2sca.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["import { observe } from \"./index\";\n\n// 我希望能重写数组中的部分方法\nlet oldArrayProto = Array.prototype; // 获取数组的原型\n\n// newArrayProto.__proto__ = oldArrayProto\nexport let newArrayProto = Object.create(oldArrayProto);\n// 找到所有的变异方法, content/slice都会不改变原来的数组\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"splice\", \"sort\"];\n\nmethods.forEach((method) => {\n  newArrayProto[method] = function (...agrs) {\n    // 这里重写了数组的方法\n    const result = oldArrayProto[method].call(this, ...agrs); // 内部调用原来的方法，函数的劫持， 切片编程\n    // 此时，还需要对新增的数据再次进行劫持\n    let inserted;\n    let ob = this.__ob__;\n    switch (method) {\n      case \"push\":\n      case \"unshift\":\n        inserted = agrs;\n        break;\n      case \"splice\":\n        inserted = agrs.slice(2);\n        break;\n\n      default:\n        break;\n    }\n    if (inserted) {\n      // 对新增的内容进行观测\n      ob.observerArray(inserted);\n    }\n    return result;\n  };\n});\n","import { newArrayProto } from \"./array\";\n\nclass Observer {\n  constructor(data) {\n    // 将__ob__变成不可枚举\n    Object.defineProperty(data, \"__ob__\", {\n      value: this,\n      enumerable: false,\n    });\n    if (Array.isArray(data)) {\n      // 这里我们可以重写数组中的方法，7个变异方法，但是需要保留数组原有的方法，并且可以重写部分\n\n      data.__proto__ = newArrayProto;\n\n      this.observerArray(data);\n    } else {\n      // Object.defineProperty只能劫持已经存在的属性，后增加的或者删除的，劫持不了\n      // 这就是为什么会出现$set 和 $delete这些api的原因\n      this.walk(data);\n    }\n  }\n  /** 循环对象，对属性依次劫持 */\n  walk(data) {\n    // 重新定义属性\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\n  }\n  /** 观测数组 */\n  observerArray(data) {\n    data.forEach((item) => observe(item));\n  }\n}\n\nexport function defineReactive(target, key, value) {\n  // 闭包 属性劫持\n  // 走到递归，对所有的对象进行劫持\n  observe(value);\n  Object.defineProperty(target, key, {\n    get() {\n      // 取值的时候，会执行\n      return value;\n    },\n    set(newValue) {\n      // 修改的时候，会执行\n      if (newValue === value) return;\n      // 对用户传过来的数据进行再次代理\n      observe(newValue);\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  // 对这个对象进行劫持\n  if (typeof data !== \"object\" || data === null) {\n    return; // 只对对象进行劫持\n  }\n  if (data.__ob__ instanceof Observer) {\n    return data.__ob__;\n  }\n\n  // 如果一个对象被劫持过了，那就不需要再劫持了（需要判断一个对象是不是被接触过，用实例来判断）\n\n  return new Observer(data);\n}\n","import { observe } from \"./observe/index\";\n\n/**\n * 初始化状态\n * @param {*} vm v2sca实例\n */\nexport function initState(vm) {\n  const opts = vm.$options;\n  if (opts.data) {\n    initData(vm);\n  }\n}\n\nfunction proxy(vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[target][key];\n    },\n    set(newValue) {\n      vm[target][key] = newValue;\n    },\n  });\n}\n\n/**\n * 初始化数据\n * @param {*} vm v2sca实例\n */\nfunction initData(vm) {\n  // data有可能是函数 || 对象\n  let data = vm.$options.data;\n  data = typeof data === \"function\" ? data.call(vm) : data;\n\n  vm._data = data;\n  // 对数据进行劫持，vue2里采用了一个api defineProperty\n  observe(data);\n\n  // 对数据进行代理， 将vm._data 用vm来代理就行了\n  for (const key in data) {\n    proxy(vm, \"_data\", key);\n  }\n}\n","import { initState } from \"./state\";\n/**\n * 增加init方法\n * @param {*} V2sca V2sca\n */\nexport function initMixin(V2sca) {\n  V2sca.prototype._init = function (options) {\n    // 使用vue的时候会有很多类似$xx的变量，$ref,$data,$nexttick，所有以$开头的，都认为是自己的属性。\n    const vm = this;\n    // 将用户的选项挂载实例上\n    vm.$options = options;\n\n    // 初始化状态\n    initState(vm);\n  };\n}\n","import { initMixin } from \"./init\"\n/**\n * V2sca\n * @param {*} options 用户选项\n */\nfunction V2sca(options) {\n    \n    this._init(options)\n}\n\ninitMixin(V2sca)\n\n\nexport default V2sca"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","agrs","result","call","inserted","ob","__ob__","slice","observerArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newValue","initState","vm","opts","$options","initData","proxy","_data","initMixin","V2sca","_init","options"],"mappings":"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"}